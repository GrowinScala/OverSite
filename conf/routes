    # ROUTES
    # THIS FILE DEFINES ALL APPLICATION ROUTES (HIGHER PRIORITY ROUTES FIRST)


    #SEND AN EMAIL

POST   /email                               api.controllers.EmailsController.email

    #POST A DRAFT
POST   /draft                               api.controllers.DraftsController.draft

    #REPLACE A DRAFT
PUT    /draft/:draftID                      api.controllers.DraftsController.updateDraft(draftID: String)

    #CHANGE FROM DRAFT TO EMAIL OR MOVE THE DRAFT TO TRASH OR REVERSE
PATCH  /draft/:draftID                     api.controllers.DraftsController.toSentOrDraft(draftID: String)

    #GET DRAFTS
GET    /drafts                              api.controllers.DraftsController.getDrafts(isTrash: Option[Boolean])
GET    /drafts/:draftID                     api.controllers.DraftsController.getDraft(draftID: String, isTrash: Option[Boolean])


    #INBOX

GET    /chats                               api.controllers.ChatController.inbox(isTrash: Option[Boolean])
GET    /chats/:chatID                api.controllers.ChatController.getEmails(chatID: String, isTrash: Option[Boolean])


    #SEE THE EMAILS THAT ARE INCLUDED IN THE CATEGORIES: "SENT", "RECEIVED", "DRAFT"

GET    /emails                      api.controllers.EmailsController.getEmails(status: Option[String])
GET    /emails/:emailID             api.controllers.EmailsController.getEmail(emailID: String, status: Option[String])


    #PATCH ONLY AVAILABLE TO #"SOMETHING"<->#"TRASH"
PATCH /emails/:emailID              api.controllers.EmailsController.moveInOutTrash(emailID: String)
PATCH /chats/:chatID                api.controllers.ChatController.moveInOutTrash(chatID: String)

    #GIVE PERMISSION TO SOMEONE TO ACCESS THE SHARED CHATS

POST   /shares                              api.controllers.ChatController.supervised

    #GET PERMISSION TO SOMEONE TO ACCESS THE SHARED CHATS
GET    /shares                              api.controllers.ChatController.getShares
GET    /shares/:shareID              api.controllers.ChatController.getSharedEmails(shareID: String)
GET    /shares/:shareID/email/:emailID      api.controllers.EmailsController.getSharedEmail(shareID: String, emailID: String)

    #DELETE PERMISSION TO SOMEONE TO ACCESS THE SHARED CHATS

DELETE /shares                              api.controllers.ChatController.takePermissions


    #AUTHENTICATION:

POST   /signin                              api.controllers.UsersController.signIn
POST   /login                               api.controllers.UsersController.logIn
PATCH  /logout                              api.controllers.UsersController.logOut


